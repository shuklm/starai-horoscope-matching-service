<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.3.9.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.starai.api.horoscopematching</groupId>
    <artifactId>starai-horoscope-matching-service</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>starai-horoscope-matching-service</name>
    <description>starai-horoscope-matching-service</description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <java.version>11</java.version>
        <spring-cloud.version>Hoxton.SR9</spring-cloud.version>
        <problem-spring-web.version>0.26.2</problem-spring-web.version>
        <swagger.version>3.0.0</swagger.version>
        <commons-lang3.version>3.10</commons-lang3.version>
        <commons-io.version>2.6</commons-io.version>

        <testcontainers.version>1.15.1</testcontainers.version>
        <awaitility.version>4.0.3</awaitility.version>

        <project.testresult.directory>${project.build.directory}/test-results</project.testresult.directory>
        <maven-checkstyle-plugin.version>3.1.1</maven-checkstyle-plugin.version>
        <maven-pmd-plugin.version>3.13.0</maven-pmd-plugin.version>
<!--        <spotless.version>2.7.0</spotless.version>-->
        <dependency-check-maven.version>3.3.2</dependency-check-maven.version>
        <properties-maven-plugin.version>1.0.0</properties-maven-plugin.version>
<!--        <maven-failsafe-plugin.version>3.0.0-M5</maven-failsafe-plugin.version>-->
<!--        <fabric8-docker-maven.version>0.34.1</fabric8-docker-maven.version>-->
        <sonar-maven-plugin.version>3.7.0.1746</sonar-maven-plugin.version>
        <jacoco-maven-plugin.version>0.8.6</jacoco-maven-plugin.version>
        <jacoco.minimum.coverage>0.80</jacoco.minimum.coverage>
        <jacoco.utReportFolder>${project.build.directory}/jacoco/test</jacoco.utReportFolder>
        <jacoco.utReportFile>${jacoco.utReportFolder}/test.exec</jacoco.utReportFile>
<!--        <jacoco.itReportFolder>${project.build.directory}/jacoco/integrationTest</jacoco.itReportFolder>-->
<!--        <jacoco.itReportFile>${jacoco.itReportFolder}/integrationTest.exec</jacoco.itReportFile>-->
        <junit.utReportFolder>${project.testresult.directory}/test</junit.utReportFolder>
<!--        <junit.itReportFolder>${project.testresult.directory}/integrationTest</junit.itReportFolder>-->
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.zalando</groupId>
            <artifactId>problem-spring-web-starter</artifactId>
            <version>${problem-spring-web.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-boot-starter</artifactId>
            <version>${swagger.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons-io.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <version>${awaitility.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>postgresql</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers-bom</artifactId>
                <version>${testcontainers.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>build-info</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
<!--            <plugin>-->
<!--                <groupId>pl.project13.maven</groupId>-->
<!--                <artifactId>git-commit-id-plugin</artifactId>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <goals>-->
<!--                            <goal>revision</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--                <configuration>-->
<!--                    <failOnNoGitDirectory>false</failOnNoGitDirectory>-->
<!--                    <failOnUnableToExtractRepoInfo>false</failOnUnableToExtractRepoInfo>-->
<!--                    <includeOnlyProperties>-->
<!--                        <includeOnlyProperty>^git.commit.id.abbrev$</includeOnlyProperty>-->
<!--                        <includeOnlyProperty>^git.commit.id.describe$</includeOnlyProperty>-->
<!--                        <includeOnlyProperty>^git.branch$</includeOnlyProperty>-->
<!--                    </includeOnlyProperties>-->
<!--                </configuration>-->
<!--            </plugin>-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <runOrder>alphabetical</runOrder>
                    <reportsDirectory>${junit.utReportFolder}</reportsDirectory>
                    <excludes>
                        <exclude>**/*IT*</exclude>
                        <exclude>**/*IntTest*</exclude>
                        <exclude>**/*IntegrationTest*</exclude>
                    </excludes>
                </configuration>
            </plugin>
<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-failsafe-plugin</artifactId>-->
<!--                <version>${maven-failsafe-plugin.version}</version>-->
<!--                <configuration>-->
<!--                    <classesDirectory>${project.build.outputDirectory}</classesDirectory>-->
<!--                    <runOrder>alphabetical</runOrder>-->
<!--                    <reportsDirectory>${junit.itReportFolder}</reportsDirectory>-->
<!--                    <includes>-->
<!--                        <include>**/*IT*</include>-->
<!--                        <include>**/*IntTest*</include>-->
<!--                        <include>**/*IntegrationTest*</include>-->
<!--                    </includes>-->
<!--                </configuration>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <id>integration-test</id>-->
<!--                        <goals>-->
<!--                            <goal>integration-test</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                    <execution>-->
<!--                        <id>verify</id>-->
<!--                        <goals>-->
<!--                            <goal>verify</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>properties-maven-plugin</artifactId>
                <version>${properties-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <phase>initialize</phase>
                        <goals>
                            <goal>read-project-properties</goal>
                        </goals>
                        <configuration>
                            <files>
                                <file>sonar-project.properties</file>
                            </files>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven-checkstyle-plugin.version}</version>
                <configuration>
                    <configLocation>build-config/checkstyle/checkstyle.xml</configLocation>
                    <suppressionsLocation>build-config/checkstyle/suppressions.xml</suppressionsLocation>
                    <encoding>UTF-8</encoding>
                    <consoleOutput>true</consoleOutput>
                    <failsOnError>true</failsOnError>
                    <linkXRef>false</linkXRef>
                </configuration>
                <executions>
                    <execution>
                        <id>checkstyle-validation</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>${maven-pmd-plugin.version}</version>
                <configuration>
                    <rulesets>
                        <ruleset>build-config/pmd/pmd-ruleset.xml</ruleset>
                    </rulesets>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                            <goal>cpd-check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin.version}</version>
                <configuration>
                    <dataFile>${project.build.directory}/jacoco/test/jacoco.exec</dataFile>
                    <rules>
                        <rule>
                            <element>BUNDLE</element>
                            <limits>
                                <limit>
                                    <counter>COMPLEXITY</counter>
                                    <value>COVEREDRATIO</value>
                                    <minimum>${jacoco.minimum.coverage}</minimum>
                                </limit>
                            </limits>
                        </rule>
                    </rules>
                    <excludes>
                        <exclude>**/*Application.*</exclude>
                        <exclude>**/config/**</exclude>
                        <exclude>**/models/*</exclude>
                        <exclude>**/dtos/*</exclude>
                        <exclude>**/exceptions/*</exclude>
                        <exclude>**/*Constants*</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <id>pre-unit-tests</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <!-- Sets the path to the file which contains the execution data. -->
                            <destFile>${jacoco.utReportFile}</destFile>
                        </configuration>
                    </execution>
                    <!-- Ensures that the code coverage report for unit tests is created after unit tests have been run -->
                    <execution>
                        <id>post-unit-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${jacoco.utReportFile}</dataFile>
                            <outputDirectory>${jacoco.utReportFolder}</outputDirectory>
                        </configuration>
                    </execution>
<!--                    <execution>-->
<!--                        <id>pre-integration-tests</id>-->
<!--                        <goals>-->
<!--                            <goal>prepare-agent-integration</goal>-->
<!--                        </goals>-->
<!--                        <configuration>-->
<!--                            &lt;!&ndash; Sets the path to the file which contains the execution data. &ndash;&gt;-->
<!--                            <destFile>${jacoco.itReportFile}</destFile>-->
<!--                        </configuration>-->
<!--                    </execution>-->
<!--                    &lt;!&ndash; Ensures that the code coverage report for integration tests is created after integration tests have been run &ndash;&gt;-->
<!--                    <execution>-->
<!--                        <id>post-integration-tests</id>-->
<!--                        <phase>post-integration-test</phase>-->
<!--                        <goals>-->
<!--                            <goal>report-integration</goal>-->
<!--                        </goals>-->
<!--                        <configuration>-->
<!--                            <dataFile>${jacoco.itReportFile}</dataFile>-->
<!--                            <outputDirectory>${jacoco.itReportFolder}</outputDirectory>-->
<!--                        </configuration>-->
<!--                    </execution>-->
                </executions>
            </plugin>
<!--            <plugin>-->
<!--                <groupId>com.diffplug.spotless</groupId>-->
<!--                <artifactId>spotless-maven-plugin</artifactId>-->
<!--                <version>${spotless.version}</version>-->
<!--                <configuration>-->
<!--                    <java>-->
<!--                        <googleJavaFormat>-->
<!--                            <version>1.8</version>-->
<!--                            <style>AOSP</style>-->
<!--                        </googleJavaFormat>-->
<!--                    </java>-->
<!--                </configuration>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <phase>compile</phase>-->
<!--                        <goals>-->
<!--                            <goal>check</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
<!--            <plugin>-->
<!--                <groupId>io.fabric8</groupId>-->
<!--                <artifactId>docker-maven-plugin</artifactId>-->
<!--                <version>${fabric8-docker-maven.version}</version>-->
<!--                <configuration>-->
<!--                    <verbose>true</verbose>-->
<!--                    <images>-->
<!--                        <image>-->
<!--                            <external>-->
<!--                                <type>compose</type>-->
<!--                                <basedir>docker</basedir>-->
<!--                                <composeFile>docker-compose.yml</composeFile>-->
<!--                            </external>-->
<!--                            <run>-->
<!--                                <wait>-->
<!--                                    <time>5000</time>-->
<!--                                    &lt;!&ndash;<log>Docker databases are ready to accept connections</log>&ndash;&gt;-->
<!--                                </wait>-->
<!--                            </run>-->
<!--                        </image>-->
<!--                    </images>-->
<!--                </configuration>-->
<!--            </plugin>-->
            <plugin>
                <groupId>org.owasp</groupId>
                <artifactId>dependency-check-maven</artifactId>
                <version>${dependency-check-maven.version}</version>
                <configuration>
                    <failOnError>false</failOnError>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>${sonar-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>sonar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <repositories>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
        </repository>
    </repositories>
</project>
